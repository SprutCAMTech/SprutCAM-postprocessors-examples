// This file may be autogenerated, do not place meaningful code here.
// Use it only to define a list of nc-words (registers) that may appear
// in blocks of the nc-file.
namespace SprutTechnology.SCPostprocessor
{
    ///<summary>A class that defines the nc-file - main output file that should be generated by the postprocessor.</summary>
    public partial class NCFile : TTextNCFile
    {
        ///<summary>The block of the nc-file is an ordered list of nc-words</summary>
        public NCBlock Block;
        ///<summary></summary>
        public CountingNCWord BlockN = new CountingNCWord("N{######}", 10, 10, 1);
        ///<summary>X coordinate of the movement</summary>
        public NumericNCWord X = new NumericNCWord("X{-#####!####}", 0);
        ///<summary>Y coordinate of the movement</summary>
        public NumericNCWord Y = new NumericNCWord("Y{-#####!####}", 0);
        ///<summary></summary>
        public NumericNCWord Z = new NumericNCWord("Z{-#####!####}", 0);
        ///<summary></summary>
        public NumericNCWord GInterp = new NumericNCWord("G{##}", 100);
        ///<summary></summary>
        public NumericNCWord Plane = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord KorEcv = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord KorDL = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord Cycle = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord ABS_INC = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord COORDSYS = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord SmoothMv = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord CancelScale = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord Units = new NumericNCWord("G{00}", 0);
        ///<summary></summary>
        public NumericNCWord Cyc_retract = new NumericNCWord("G{##}", 0);
        ///<summary></summary>
        public NumericNCWord GDwell = new NumericNCWord("G{##}", 0);
        ///<summary></summary>
        public NumericNCWord GLCS = new NumericNCWord("G{##}", 0);
        ///<summary></summary>
        public NumericNCWord GFUNCC = new NumericNCWord("G{##}", 0);
        ///<summary></summary>
        public NumericNCWord GFeed = new NumericNCWord("G{###}", 0);
        ///<summary></summary>
        public NumericNCWord GoTCP = new NumericNCWord("M{###}", 0);
        ///<summary></summary>
        public NumericNCWord M = new NumericNCWord("M{##}", 0);
        ///<summary></summary>
        public NumericNCWord MStop = new NumericNCWord("M{##}", 0);
        ///<summary></summary>
        public NumericNCWord D = new NumericNCWord("D{00}", 0);
        ///<summary></summary>
        public NumericNCWord H = new NumericNCWord("H{##}", 0);
        ///<summary></summary>
        public NumericNCWord BT = new NumericNCWord("B-{####.####}", 0);
        ///<summary></summary>
        public NumericNCWord CT = new NumericNCWord("C-{####.####}", 0);
        ///<summary></summary>
        public NumericNCWord ZCycle = new NumericNCWord("Z-{####.####}", 99999.999);
        ///<summary></summary>
        public NumericNCWord ZClear = new NumericNCWord("Z-{####.####}", 0);
        ///<summary></summary>
        public NumericNCWord Q = new NumericNCWord("Q-{####.####}", 0);
        ///<summary></summary>
        public NumericNCWord QStep = new NumericNCWord("Q{#####.####}", 0);
        ///<summary></summary>
        public NumericNCWord XC_ = new NumericNCWord("I{#####.####}", 0);
        ///<summary></summary>
        public NumericNCWord YC_ = new NumericNCWord("J{#####.####}", 0);
        ///<summary></summary>
        public NumericNCWord ZC_ = new NumericNCWord("K{######.#####}", 0);
        ///<summary></summary>
        public NumericNCWord PSubNum = new NumericNCWord("P{##########}", 0);
        ///<summary></summary>
        public NumericNCWord AT = new NumericNCWord("A{######.#####}", 0);
        ///<summary></summary>
        public NumericNCWord Pause = new NumericNCWord("P{##.#}", 0);
        ///<summary></summary>
        public NumericNCWord Tool = new NumericNCWord("T{####}",0);
        ///<summary></summary>
        public NumericNCWord Feed_ = new NumericNCWord("F{####.#}",0);
        ///<summary></summary>
        public NumericNCWord InvFeed = new NumericNCWord("F{####.##}",0);
        ///<summary></summary>
        public NumericNCWord MSP = new NumericNCWord("M{##}", 5);
        ///<summary></summary>
        public NumericNCWord Mc = new NumericNCWord("M{##}", 0);
        ///<summary></summary>
        public NumericNCWord Msm = new NumericNCWord("M{0}", 0);
        ///<summary></summary>
        public NumericNCWord S = new NumericNCWord("S{####}", 0);
        ///<summary></summary>
        public NumericNCWord Flip = new NumericNCWord("G51 A-{##}", 0);
        ///<summary></summary>
        public NCBlock TextBlock;
        ///<summary>Text string to output simply with number</summary>
        public TextNCWord Text = new TextNCWord("", "", "");
        ///<summary></summary>
        
        public NCFile(): base()
        {
            Block = new NCBlock(
                this, 
                BlockN,
                ABS_INC,
                SmoothMv,
                CancelScale,
                COORDSYS,
                GLCS,
                Cycle,
                GInterp,
                GFUNCC,
                GDwell,
                Plane,
                GFeed,
                GoTCP,
                KorEcv,
                Cyc_retract,
                X, 
                Y, 
                Z,
                XC_,
                YC_,
                ZC_,
                ZCycle,
                ZClear,
                Q,
                QStep,
                Feed_,
                Pause,
                D,
                S,
                Tool,
                KorDL,
                H,
                Msm,
                Flip,
                M,
                MStop,
                MSP,
                Mc,
                AT,
                BT,
                CT,
                InvFeed,
                PSubNum,
                Units
                  );
            TextBlock = new NCBlock(
                      this, 
                      BlockN,
                      Units, 
                      Text);
            OnInit();
        }
    }
}